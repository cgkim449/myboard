<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cgkim.myboard.dao.BoardDao">

    <select id="selectList" resultType="boardListResponse" parameterType="boardSearchRequest">
        SELECT b.board_id,
               b.category_id,
               b.title,
               b.content,
               b.view_count,
               b.has_attach,
               b.thumbnail_uri,
               b.register_date,
               b.update_date,
               b.guest_nickname,
               b.guest_password,
               ct.name category_name,
               m.nickname member_nickname,
               a.nickname admin_nickname
        FROM tbl_board AS b
            JOIN tbl_category ct
                ON b.category_id = ct.category_id
            LEFT JOIN tbl_member m
                ON b.member_id = m.member_id
            LEFT JOIN tbl_admin a
                ON b.admin_id = a.admin_id
        <include refid="boardSearchCondition"/>
        ORDER BY b.register_date DESC, b.board_id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="boardSearchRequest">
        SELECT count(*)
        FROM tbl_board AS b
            LEFT JOIN tbl_member m
                ON b.member_id = m.member_id
            LEFT JOIN tbl_admin a
                ON b.admin_id = a.admin_id
        <include refid="boardSearchCondition"/>
    </select>


    <sql id="boardSearchCondition">
        <where>
            <if test="fromDate != null">
                b.register_date <![CDATA[>=]]> #{fromDate}
            </if>
            <if test="toDate != null">
                AND b.register_date <![CDATA[<=]]> #{toDate}
            </if>
            <if test = "categoryId != 0 and categoryId != null">
                AND b.category_id = #{categoryId}
            </if>
            <if test = "keyword != null">
                AND (
                     b.title LIKE concat('%',#{keyword},'%')
                     OR b.content LIKE concat('%',#{keyword},'%')
                     OR b.guest_nickname LIKE concat('%',#{keyword},'%')
                     OR a.nickname LIKE concat('%',#{keyword},'%')
                     OR m.nickname LIKE concat('%',#{keyword},'%')
                    )
            </if>
        </where>
    </sql>

    <select id="selectOne" resultType="boardDetailResponse" parameterType="long">
        SELECT b.board_id,
               b.category_id,
               b.title,
               b.content,
               b.view_count,
               b.has_attach,
               b.register_date,
               b.update_date,
               b.guest_nickname,
               b.guest_password,
               ct.name category_name,
               m.username member_username,
               m.nickname member_nickname,
               a.nickname admin_nickname,
               a.username admin_username
        FROM tbl_board AS b
            JOIN tbl_category ct
                ON b.category_id = ct.category_id
            LEFT JOIN tbl_member m
                ON b.member_id = m.member_id
            LEFT JOIN tbl_admin a
                ON b.admin_id = a.admin_id
        WHERE b.board_id = #{boardId}
    </select>

    <select id="selectBoardIdByGuestPassword" resultType="long" parameterType="map">
        SELECT board_id
        FROM tbl_board
        WHERE board_id = #{boardId} AND guest_password = #{guestPassword}
    </select>

    <select id="selectMemberId" resultType="java.lang.Long" parameterType="long">
        SELECT member_id
        FROM tbl_board
        WHERE board_id = #{boardId}
    </select>

    <select id="selectGuestNickname" resultType="String">
        SELECT guest_nickname
        FROM tbl_board
        WHERE board_id = #{boardId}
    </select>

    <select id="selectAdminId" resultType="java.lang.Long">
        SELECT admin_id
        FROM tbl_board
        WHERE board_id = #{boardId}
    </select>

    <update id="increaseViewCnt" parameterType="long">
        UPDATE tbl_board
        SET view_count = view_count + 1
        WHERE board_id = #{boardId}
    </update>

    <update id="updateHasAttach" parameterType="map">
        UPDATE tbl_board
        SET has_attach = #{hasAttach}
        WHERE board_id = #{boardId}
    </update>

    <update id="update" parameterType="BoardUpdateRequest">
        UPDATE tbl_board
        SET title = #{title},
            content = #{content},
            update_date = now()
        WHERE board_id = #{boardId}
    </update>

    <update id="updateThumbnailUri" parameterType="map">
        UPDATE tbl_board
        SET thumbnail_uri = #{thumbnailUri}
        WHERE board_id = #{boardId}
    </update>

    <insert id="insertGuestBoard" useGeneratedKeys="true" keyProperty="boardId">
        INSERT
        INTO tbl_board (category_id, title, content, guest_nickname, guest_password)
        VALUES(#{categoryId}, #{title}, #{content}, #{guestNickname}, #{guestPassword});
    </insert>

    <insert id="insertMemberBoard" useGeneratedKeys="true" keyProperty="boardId">
        INSERT
        INTO tbl_board (member_id, category_id, title, content)
        VALUES(#{memberId}, #{categoryId}, #{title}, #{content});
    </insert>
    <insert id="insertAdminBoard" useGeneratedKeys="true" keyProperty="boardId">
        INSERT
        INTO tbl_board (admin_id, category_id, title, content)
        VALUES(#{adminId}, #{categoryId}, #{title}, #{content});
    </insert>

    <delete id="deleteByBoardId" parameterType="long">
        DELETE
        FROM tbl_board
        WHERE board_id = #{boardId}
    </delete>
</mapper>