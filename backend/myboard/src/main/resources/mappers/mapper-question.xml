<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cgkim.myboard.dao.QuestionDao">

    <select id="selectList" resultType="questionListResponse" parameterType="questionSearchRequest">
        select q.question_id,
               q.category_id,
               q.title,
               q.content,
               q.view_count,
               q.is_secret,
               q.has_attach,
               q.thumbnail_uri,
               q.register_date,
               q.update_date,
               ct.name category_name,
               m.nickname member_nickname,
               a.nickname admin_nickname,
               an.answer_id
        from tbl_question as q
            join tbl_category ct
                on q.category_id = ct.category_id
            left join tbl_member m
                on q.member_id = m.member_id
            left join tbl_admin a
                on q.admin_id = a.admin_id
            left join tbl_answer an
                on q.question_id = an.question_id
        <include refid="searchCondition"/>
      order by q.register_date desc, q.question_id desc
         limit #{offset}, #{limit}
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="questionSearchRequest">
        select count(*)
        from tbl_question as q
            left join tbl_member m
                on q.member_id = m.member_id
            left join tbl_admin a
                on q.admin_id = a.admin_id
        <include refid="searchCondition"/>
    </select>

    <sql id="searchCondition">
        <where>
            <if test="fromDate != null">
                q.register_date <![CDATA[>=]]> #{fromDate}
            </if>
            <if test="toDate != null">
                and q.register_date <![CDATA[<=]]> #{toDate}
            </if>
            <if test = "categoryId != 0 and categoryId != null">
                and q.category_id = #{categoryId}
            </if>
            <if test = "keyword != null">
                and (
                     q.title like concat('%',#{keyword},'%')
                     or q.content like concat('%',#{keyword},'%')
                     or m.nickname like concat('%',#{keyword},'%')
                     or a.nickname like concat('%',#{keyword},'%')
                    )
            </if>
        </where>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="questionId">
        insert
        into tbl_question (member_id, category_id, title, content, is_secret)
        values(#{memberId}, #{categoryId}, #{title}, #{content}, #{isSecret});
    </insert>

    <update id="updateThumbnailUri" parameterType="map">
        update tbl_question
        set thumbnail_uri = #{thumbnailUri}
        where question_id = #{id}
    </update>

    <update id="updateHasAttach" parameterType="map">
        update tbl_question
        set has_attach = #{hasAttach}
        where question_id = #{id}
    </update>

    <select id="selectOne" resultType="questionDetailResponse" parameterType="long">
        select q.question_id,
               q.category_id,
               q.title,
               q.content,
               q.is_secret,
               q.view_count,
               q.has_attach,
               q.register_date,
               q.update_date,
               ct.name category_name,
               m.username member_username,
               m.nickname member_nickname,
               a.username admin_username,
               a.nickname admin_nickname
        from tbl_question as q
            join tbl_category ct
                on q.category_id = ct.category_id
            left join tbl_member m
                on q.member_id = m.member_id
            left join tbl_admin a
                      on q.admin_id = a.admin_id
        where q.question_id = #{questionId}
    </select>

    <select id="selectMemberId" resultType="java.lang.Long" parameterType="Long">
        select member_id
        from tbl_question
        where question_id = #{questionId}
    </select>

    <update id="increaseViewCnt" parameterType="long">
        update tbl_question
        set view_count = view_count + 1
        where question_id = #{questionId}
    </update>

    <update id="update" parameterType="map">
        update tbl_question
        set title = #{title},
            content = #{content},
            is_secret = #{isSecret},
            update_date = now()
        where question_id = #{questionId}
    </update>

    <delete id="delete" parameterType="long">
        delete
        from tbl_question
        where question_id = #{questionId}
    </delete>
</mapper>